Terminals unused in grammar

   MK_DOT
   ERROR


State 205 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: global_decl_list
    2        | %empty

    3 global_decl_list: global_decl_list global_decl
    4                 | global_decl

    5 global_decl: decl_list function_decl
    6            | function_decl

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    8              | VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE

   11 param_list: param_list MK_COMMA param
   12           | param

   13 param: type ID
   14      | type ID dim_fn

   15 dim_fn: MK_LB expr_null MK_RB
   16       | dim_fn MK_LB expr MK_RB

   17 expr_null: expr
   18          | %empty

   19 block: decl_list stmt_list
   20      | stmt_list
   21      | decl_list
   22      | %empty

   23 decl_list: decl_list decl
   24          | decl

   25 decl: type_decl
   26     | var_decl

   27 type_decl: TYPEDEF type id_list MK_SEMICOLON
   28          | TYPEDEF VOID id_list MK_SEMICOLON

   29 var_decl: type init_id_list MK_SEMICOLON

   30 type: INT
   31     | FLOAT
   32     | ID

   33 id_list: ID
   34        | id_list MK_COMMA ID
   35        | id_list MK_COMMA ID dim_decl
   36        | ID dim_decl

   37 dim_decl: MK_LB cexpr MK_RB
   38         | dim_decl MK_LB cexpr MK_RB

   39 cexpr: cexpr OP_PLUS mcexpr
   40      | cexpr OP_MINUS mcexpr
   41      | mcexpr

   42 mcexpr: mcexpr OP_TIMES cfactor
   43       | mcexpr OP_DIVIDE cfactor
   44       | cfactor

   45 cfactor: CONST
   46        | OP_MINUS cfactor
   47        | MK_LPAREN cexpr MK_RPAREN

   48 init_id_list: init_id
   49             | init_id_list MK_COMMA init_id

   50 init_id: ID
   51        | ID dim_decl
   52        | ID OP_ASSIGN relop_expr

   53 stmt_list: stmt_list stmt
   54          | stmt

   55 stmt: MK_LBRACE block MK_RBRACE
   56     | WHILE MK_LPAREN test MK_RPAREN stmt
   57     | FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt
   58     | var_ref OP_ASSIGN relop_expr MK_SEMICOLON
   59     | IF MK_LPAREN test MK_RPAREN stmt
   60     | IF MK_LPAREN test MK_RPAREN stmt ELSE stmt
   61     | ID MK_LPAREN relop_expr_list MK_RPAREN MK_SEMICOLON
   62     | MK_SEMICOLON
   63     | RETURN MK_SEMICOLON
   64     | RETURN relop_expr MK_SEMICOLON

   65 assign_expr_list: nonempty_assign_expr_list
   66                 | %empty

   67 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA assign_expr
   68                          | assign_expr

   69 test: assign_expr

   70 assign_expr: ID OP_ASSIGN relop_expr
   71            | relop_expr

   72 relop_expr: relop_term
   73           | relop_expr OP_OR relop_term

   74 relop_term: relop_factor
   75           | relop_term OP_AND relop_factor

   76 relop_factor: expr
   77             | expr rel_op expr

   78 rel_op: OP_EQ
   79       | OP_GE
   80       | OP_LE
   81       | OP_NE
   82       | OP_GT
   83       | OP_LT

   84 relop_expr_list: nonempty_relop_expr_list
   85                | %empty

   86 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA relop_expr
   87                         | relop_expr

   88 expr: expr add_op term
   89     | term

   90 add_op: OP_PLUS
   91       | OP_MINUS

   92 term: term mul_op factor
   93     | factor

   94 mul_op: OP_TIMES
   95       | OP_DIVIDE

   96 factor: MK_LPAREN relop_expr MK_RPAREN
   97       | OP_MINUS MK_LPAREN relop_expr MK_RPAREN
   98       | OP_NOT MK_LPAREN relop_expr MK_RPAREN
   99       | CONST
  100       | OP_MINUS CONST
  101       | OP_NOT CONST
  102       | ID MK_LPAREN relop_expr_list MK_RPAREN
  103       | OP_MINUS ID MK_LPAREN relop_expr_list MK_RPAREN
  104       | OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN
  105       | var_ref
  106       | OP_MINUS var_ref
  107       | OP_NOT var_ref

  108 var_ref: ID
  109        | ID dim_list

  110 dim_list: dim_list MK_LB expr MK_RB
  111         | MK_LB expr MK_RB


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 7 8 9 10 13 14 32 33 34 35 36 50 51 52 61 70 102 103 104 108
    109
CONST (259) 45 99 100 101
VOID (260) 8 10 28
INT (261) 30
FLOAT (262) 31
IF (263) 59 60
ELSE (264) 60
WHILE (265) 56
FOR (266) 57
TYPEDEF (267) 27 28
OP_ASSIGN (268) 52 58 70
OP_OR (269) 73
OP_AND (270) 75
OP_NOT (271) 98 101 104 107
OP_EQ (272) 78
OP_NE (273) 81
OP_GT (274) 82
OP_LT (275) 83
OP_GE (276) 79
OP_LE (277) 80
OP_PLUS (278) 39 90
OP_MINUS (279) 40 46 91 97 100 103 106
OP_TIMES (280) 42 94
OP_DIVIDE (281) 43 95
MK_LB (282) 15 16 37 38 110 111
MK_RB (283) 15 16 37 38 110 111
MK_LPAREN (284) 7 8 9 10 47 56 57 59 60 61 96 97 98 102 103 104
MK_RPAREN (285) 7 8 9 10 47 56 57 59 60 61 96 97 98 102 103 104
MK_LBRACE (286) 7 8 9 10 55
MK_RBRACE (287) 7 8 9 10 55
MK_COMMA (288) 11 34 35 49 67 86
MK_SEMICOLON (289) 27 28 29 57 58 61 62 63 64
MK_DOT (290)
ERROR (291)
RETURN (292) 63 64


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
program (39)
    on left: 1 2, on right: 0
global_decl_list (40)
    on left: 3 4, on right: 1 3
global_decl (41)
    on left: 5 6, on right: 3 4
function_decl (42)
    on left: 7 8 9 10, on right: 5 6
param_list (43)
    on left: 11 12, on right: 7 8 11
param (44)
    on left: 13 14, on right: 11 12
dim_fn (45)
    on left: 15 16, on right: 14 16
expr_null (46)
    on left: 17 18, on right: 15
block (47)
    on left: 19 20 21 22, on right: 7 8 9 10 55
decl_list (48)
    on left: 23 24, on right: 5 19 21 23
decl (49)
    on left: 25 26, on right: 23 24
type_decl (50)
    on left: 27 28, on right: 25
var_decl (51)
    on left: 29, on right: 26
type (52)
    on left: 30 31 32, on right: 7 9 13 14 27 29
id_list (53)
    on left: 33 34 35 36, on right: 27 28 34 35
dim_decl (54)
    on left: 37 38, on right: 35 36 38 51
cexpr (55)
    on left: 39 40 41, on right: 37 38 39 40 47
mcexpr (56)
    on left: 42 43 44, on right: 39 40 41 42 43
cfactor (57)
    on left: 45 46 47, on right: 42 43 44 46
init_id_list (58)
    on left: 48 49, on right: 29 49
init_id (59)
    on left: 50 51 52, on right: 48 49
stmt_list (60)
    on left: 53 54, on right: 19 20 53
stmt (61)
    on left: 55 56 57 58 59 60 61 62 63 64, on right: 53 54 56 57 59
    60
assign_expr_list (62)
    on left: 65 66, on right: 57
nonempty_assign_expr_list (63)
    on left: 67 68, on right: 65 67
test (64)
    on left: 69, on right: 56 59 60
assign_expr (65)
    on left: 70 71, on right: 67 68 69
relop_expr (66)
    on left: 72 73, on right: 52 58 64 70 71 73 86 87 96 97 98
relop_term (67)
    on left: 74 75, on right: 72 73 75
relop_factor (68)
    on left: 76 77, on right: 74 75
rel_op (69)
    on left: 78 79 80 81 82 83, on right: 77
relop_expr_list (70)
    on left: 84 85, on right: 57 61 102 103 104
nonempty_relop_expr_list (71)
    on left: 86 87, on right: 84 86
expr (72)
    on left: 88 89, on right: 16 17 76 77 88 110 111
add_op (73)
    on left: 90 91, on right: 88
term (74)
    on left: 92 93, on right: 88 89 92
mul_op (75)
    on left: 94 95, on right: 92
factor (76)
    on left: 96 97 98 99 100 101 102 103 104 105 106 107, on right:
    92 93
var_ref (77)
    on left: 108 109, on right: 58 105 106 107
dim_list (78)
    on left: 110 111, on right: 109 110


State 0

    0 $accept: . program $end

    ID       shift, and go to state 1
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    TYPEDEF  shift, and go to state 5

    $default  reduce using rule 2 (program)

    program           go to state 6
    global_decl_list  go to state 7
    global_decl       go to state 8
    function_decl     go to state 9
    decl_list         go to state 10
    decl              go to state 11
    type_decl         go to state 12
    var_decl          go to state 13
    type              go to state 14


State 1

   32 type: ID .

    $default  reduce using rule 32 (type)


State 2

    8 function_decl: VOID . ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID . ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE

    ID  shift, and go to state 15


State 3

   30 type: INT .

    $default  reduce using rule 30 (type)


State 4

   31 type: FLOAT .

    $default  reduce using rule 31 (type)


State 5

   27 type_decl: TYPEDEF . type id_list MK_SEMICOLON
   28          | TYPEDEF . VOID id_list MK_SEMICOLON

    ID     shift, and go to state 1
    VOID   shift, and go to state 16
    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4

    type  go to state 17


State 6

    0 $accept: program . $end

    $end  shift, and go to state 18


State 7

    1 program: global_decl_list .
    3 global_decl_list: global_decl_list . global_decl

    ID       shift, and go to state 1
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    TYPEDEF  shift, and go to state 5

    $default  reduce using rule 1 (program)

    global_decl    go to state 19
    function_decl  go to state 9
    decl_list      go to state 10
    decl           go to state 11
    type_decl      go to state 12
    var_decl       go to state 13
    type           go to state 14


State 8

    4 global_decl_list: global_decl .

    $default  reduce using rule 4 (global_decl_list)


State 9

    6 global_decl: function_decl .

    $default  reduce using rule 6 (global_decl)


State 10

    5 global_decl: decl_list . function_decl
   23 decl_list: decl_list . decl

    ID       shift, and go to state 1
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    TYPEDEF  shift, and go to state 5

    function_decl  go to state 20
    decl           go to state 21
    type_decl      go to state 12
    var_decl       go to state 13
    type           go to state 14


State 11

   24 decl_list: decl .

    $default  reduce using rule 24 (decl_list)


State 12

   25 decl: type_decl .

    $default  reduce using rule 25 (decl)


State 13

   26 decl: var_decl .

    $default  reduce using rule 26 (decl)


State 14

    7 function_decl: type . ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type . ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   29 var_decl: type . init_id_list MK_SEMICOLON

    ID  shift, and go to state 22

    init_id_list  go to state 23
    init_id       go to state 24


State 15

    8 function_decl: VOID ID . MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID ID . MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE

    MK_LPAREN  shift, and go to state 25


State 16

   28 type_decl: TYPEDEF VOID . id_list MK_SEMICOLON

    ID  shift, and go to state 26

    id_list  go to state 27


State 17

   27 type_decl: TYPEDEF type . id_list MK_SEMICOLON

    ID  shift, and go to state 26

    id_list  go to state 28


State 18

    0 $accept: program $end .

    $default  accept


State 19

    3 global_decl_list: global_decl_list global_decl .

    $default  reduce using rule 3 (global_decl_list)


State 20

    5 global_decl: decl_list function_decl .

    $default  reduce using rule 5 (global_decl)


State 21

   23 decl_list: decl_list decl .

    $default  reduce using rule 23 (decl_list)


State 22

    7 function_decl: type ID . MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type ID . MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   50 init_id: ID .
   51        | ID . dim_decl
   52        | ID . OP_ASSIGN relop_expr

    OP_ASSIGN  shift, and go to state 29
    MK_LB      shift, and go to state 30
    MK_LPAREN  shift, and go to state 31

    $default  reduce using rule 50 (init_id)

    dim_decl  go to state 32


State 23

   29 var_decl: type init_id_list . MK_SEMICOLON
   49 init_id_list: init_id_list . MK_COMMA init_id

    MK_COMMA      shift, and go to state 33
    MK_SEMICOLON  shift, and go to state 34


State 24

   48 init_id_list: init_id .

    $default  reduce using rule 48 (init_id_list)


State 25

    8 function_decl: VOID ID MK_LPAREN . param_list MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID ID MK_LPAREN . MK_RPAREN MK_LBRACE block MK_RBRACE

    ID         shift, and go to state 1
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    MK_RPAREN  shift, and go to state 35

    param_list  go to state 36
    param       go to state 37
    type        go to state 38


State 26

   33 id_list: ID .
   36        | ID . dim_decl

    MK_LB  shift, and go to state 30

    $default  reduce using rule 33 (id_list)

    dim_decl  go to state 39


State 27

   28 type_decl: TYPEDEF VOID id_list . MK_SEMICOLON
   34 id_list: id_list . MK_COMMA ID
   35        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 40
    MK_SEMICOLON  shift, and go to state 41


State 28

   27 type_decl: TYPEDEF type id_list . MK_SEMICOLON
   34 id_list: id_list . MK_COMMA ID
   35        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 40
    MK_SEMICOLON  shift, and go to state 42


State 29

   52 init_id: ID OP_ASSIGN . relop_expr

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    relop_expr    go to state 48
    relop_term    go to state 49
    relop_factor  go to state 50
    expr          go to state 51
    term          go to state 52
    factor        go to state 53
    var_ref       go to state 54


State 30

   37 dim_decl: MK_LB . cexpr MK_RB

    CONST      shift, and go to state 55
    OP_MINUS   shift, and go to state 56
    MK_LPAREN  shift, and go to state 57

    cexpr    go to state 58
    mcexpr   go to state 59
    cfactor  go to state 60


State 31

    7 function_decl: type ID MK_LPAREN . param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type ID MK_LPAREN . MK_RPAREN MK_LBRACE block MK_RBRACE

    ID         shift, and go to state 1
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    MK_RPAREN  shift, and go to state 61

    param_list  go to state 62
    param       go to state 37
    type        go to state 38


State 32

   38 dim_decl: dim_decl . MK_LB cexpr MK_RB
   51 init_id: ID dim_decl .

    MK_LB  shift, and go to state 63

    $default  reduce using rule 51 (init_id)


State 33

   49 init_id_list: init_id_list MK_COMMA . init_id

    ID  shift, and go to state 64

    init_id  go to state 65


State 34

   29 var_decl: type init_id_list MK_SEMICOLON .

    $default  reduce using rule 29 (var_decl)


State 35

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 66


State 36

    8 function_decl: VOID ID MK_LPAREN param_list . MK_RPAREN MK_LBRACE block MK_RBRACE
   11 param_list: param_list . MK_COMMA param

    MK_RPAREN  shift, and go to state 67
    MK_COMMA   shift, and go to state 68


State 37

   12 param_list: param .

    $default  reduce using rule 12 (param_list)


State 38

   13 param: type . ID
   14      | type . ID dim_fn

    ID  shift, and go to state 69


State 39

   36 id_list: ID dim_decl .
   38 dim_decl: dim_decl . MK_LB cexpr MK_RB

    MK_LB  shift, and go to state 63

    $default  reduce using rule 36 (id_list)


State 40

   34 id_list: id_list MK_COMMA . ID
   35        | id_list MK_COMMA . ID dim_decl

    ID  shift, and go to state 70


State 41

   28 type_decl: TYPEDEF VOID id_list MK_SEMICOLON .

    $default  reduce using rule 28 (type_decl)


State 42

   27 type_decl: TYPEDEF type id_list MK_SEMICOLON .

    $default  reduce using rule 27 (type_decl)


State 43

  102 factor: ID . MK_LPAREN relop_expr_list MK_RPAREN
  108 var_ref: ID .
  109        | ID . dim_list

    MK_LB      shift, and go to state 71
    MK_LPAREN  shift, and go to state 72

    $default  reduce using rule 108 (var_ref)

    dim_list  go to state 73


State 44

   99 factor: CONST .

    $default  reduce using rule 99 (factor)


State 45

   98 factor: OP_NOT . MK_LPAREN relop_expr MK_RPAREN
  101       | OP_NOT . CONST
  104       | OP_NOT . ID MK_LPAREN relop_expr_list MK_RPAREN
  107       | OP_NOT . var_ref

    ID         shift, and go to state 74
    CONST      shift, and go to state 75
    MK_LPAREN  shift, and go to state 76

    var_ref  go to state 77


State 46

   97 factor: OP_MINUS . MK_LPAREN relop_expr MK_RPAREN
  100       | OP_MINUS . CONST
  103       | OP_MINUS . ID MK_LPAREN relop_expr_list MK_RPAREN
  106       | OP_MINUS . var_ref

    ID         shift, and go to state 78
    CONST      shift, and go to state 79
    MK_LPAREN  shift, and go to state 80

    var_ref  go to state 81


State 47

   96 factor: MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    relop_expr    go to state 82
    relop_term    go to state 49
    relop_factor  go to state 50
    expr          go to state 51
    term          go to state 52
    factor        go to state 53
    var_ref       go to state 54


State 48

   52 init_id: ID OP_ASSIGN relop_expr .
   73 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 83

    $default  reduce using rule 52 (init_id)


State 49

   72 relop_expr: relop_term .
   75 relop_term: relop_term . OP_AND relop_factor

    OP_AND  shift, and go to state 84

    $default  reduce using rule 72 (relop_expr)


State 50

   74 relop_term: relop_factor .

    $default  reduce using rule 74 (relop_term)


State 51

   76 relop_factor: expr .
   77             | expr . rel_op expr
   88 expr: expr . add_op term

    OP_EQ     shift, and go to state 85
    OP_NE     shift, and go to state 86
    OP_GT     shift, and go to state 87
    OP_LT     shift, and go to state 88
    OP_GE     shift, and go to state 89
    OP_LE     shift, and go to state 90
    OP_PLUS   shift, and go to state 91
    OP_MINUS  shift, and go to state 92

    $default  reduce using rule 76 (relop_factor)

    rel_op  go to state 93
    add_op  go to state 94


State 52

   89 expr: term .
   92 term: term . mul_op factor

    OP_TIMES   shift, and go to state 95
    OP_DIVIDE  shift, and go to state 96

    $default  reduce using rule 89 (expr)

    mul_op  go to state 97


State 53

   93 term: factor .

    $default  reduce using rule 93 (term)


State 54

  105 factor: var_ref .

    $default  reduce using rule 105 (factor)


State 55

   45 cfactor: CONST .

    $default  reduce using rule 45 (cfactor)


State 56

   46 cfactor: OP_MINUS . cfactor

    CONST      shift, and go to state 55
    OP_MINUS   shift, and go to state 56
    MK_LPAREN  shift, and go to state 57

    cfactor  go to state 98


State 57

   47 cfactor: MK_LPAREN . cexpr MK_RPAREN

    CONST      shift, and go to state 55
    OP_MINUS   shift, and go to state 56
    MK_LPAREN  shift, and go to state 57

    cexpr    go to state 99
    mcexpr   go to state 59
    cfactor  go to state 60


State 58

   37 dim_decl: MK_LB cexpr . MK_RB
   39 cexpr: cexpr . OP_PLUS mcexpr
   40      | cexpr . OP_MINUS mcexpr

    OP_PLUS   shift, and go to state 100
    OP_MINUS  shift, and go to state 101
    MK_RB     shift, and go to state 102


State 59

   41 cexpr: mcexpr .
   42 mcexpr: mcexpr . OP_TIMES cfactor
   43       | mcexpr . OP_DIVIDE cfactor

    OP_TIMES   shift, and go to state 103
    OP_DIVIDE  shift, and go to state 104

    $default  reduce using rule 41 (cexpr)


State 60

   44 mcexpr: cfactor .

    $default  reduce using rule 44 (mcexpr)


State 61

    9 function_decl: type ID MK_LPAREN MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 105


State 62

    7 function_decl: type ID MK_LPAREN param_list . MK_RPAREN MK_LBRACE block MK_RBRACE
   11 param_list: param_list . MK_COMMA param

    MK_RPAREN  shift, and go to state 106
    MK_COMMA   shift, and go to state 68


State 63

   38 dim_decl: dim_decl MK_LB . cexpr MK_RB

    CONST      shift, and go to state 55
    OP_MINUS   shift, and go to state 56
    MK_LPAREN  shift, and go to state 57

    cexpr    go to state 107
    mcexpr   go to state 59
    cfactor  go to state 60


State 64

   50 init_id: ID .
   51        | ID . dim_decl
   52        | ID . OP_ASSIGN relop_expr

    OP_ASSIGN  shift, and go to state 29
    MK_LB      shift, and go to state 30

    $default  reduce using rule 50 (init_id)

    dim_decl  go to state 32


State 65

   49 init_id_list: init_id_list MK_COMMA init_id .

    $default  reduce using rule 49 (init_id_list)


State 66

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 108
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 109
    WHILE         shift, and go to state 110
    FOR           shift, and go to state 111
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 112
    MK_SEMICOLON  shift, and go to state 113
    RETURN        shift, and go to state 114

    $default  reduce using rule 22 (block)

    block      go to state 115
    decl_list  go to state 116
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 117
    stmt_list  go to state 118
    stmt       go to state 119
    var_ref    go to state 120


State 67

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 121


State 68

   11 param_list: param_list MK_COMMA . param

    ID     shift, and go to state 1
    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4

    param  go to state 122
    type   go to state 38


State 69

   13 param: type ID .
   14      | type ID . dim_fn

    MK_LB  shift, and go to state 123

    $default  reduce using rule 13 (param)

    dim_fn  go to state 124


State 70

   34 id_list: id_list MK_COMMA ID .
   35        | id_list MK_COMMA ID . dim_decl

    MK_LB  shift, and go to state 30

    $default  reduce using rule 34 (id_list)

    dim_decl  go to state 125


State 71

  111 dim_list: MK_LB . expr MK_RB

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    expr     go to state 126
    term     go to state 52
    factor   go to state 53
    var_ref  go to state 54


State 72

  102 factor: ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    $default  reduce using rule 85 (relop_expr_list)

    relop_expr                go to state 127
    relop_term                go to state 49
    relop_factor              go to state 50
    relop_expr_list           go to state 128
    nonempty_relop_expr_list  go to state 129
    expr                      go to state 51
    term                      go to state 52
    factor                    go to state 53
    var_ref                   go to state 54


State 73

  109 var_ref: ID dim_list .
  110 dim_list: dim_list . MK_LB expr MK_RB

    MK_LB  shift, and go to state 130

    $default  reduce using rule 109 (var_ref)


State 74

  104 factor: OP_NOT ID . MK_LPAREN relop_expr_list MK_RPAREN
  108 var_ref: ID .
  109        | ID . dim_list

    MK_LB      shift, and go to state 71
    MK_LPAREN  shift, and go to state 131

    $default  reduce using rule 108 (var_ref)

    dim_list  go to state 73


State 75

  101 factor: OP_NOT CONST .

    $default  reduce using rule 101 (factor)


State 76

   98 factor: OP_NOT MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    relop_expr    go to state 132
    relop_term    go to state 49
    relop_factor  go to state 50
    expr          go to state 51
    term          go to state 52
    factor        go to state 53
    var_ref       go to state 54


State 77

  107 factor: OP_NOT var_ref .

    $default  reduce using rule 107 (factor)


State 78

  103 factor: OP_MINUS ID . MK_LPAREN relop_expr_list MK_RPAREN
  108 var_ref: ID .
  109        | ID . dim_list

    MK_LB      shift, and go to state 71
    MK_LPAREN  shift, and go to state 133

    $default  reduce using rule 108 (var_ref)

    dim_list  go to state 73


State 79

  100 factor: OP_MINUS CONST .

    $default  reduce using rule 100 (factor)


State 80

   97 factor: OP_MINUS MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    relop_expr    go to state 134
    relop_term    go to state 49
    relop_factor  go to state 50
    expr          go to state 51
    term          go to state 52
    factor        go to state 53
    var_ref       go to state 54


State 81

  106 factor: OP_MINUS var_ref .

    $default  reduce using rule 106 (factor)


State 82

   73 relop_expr: relop_expr . OP_OR relop_term
   96 factor: MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 83
    MK_RPAREN  shift, and go to state 135


State 83

   73 relop_expr: relop_expr OP_OR . relop_term

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    relop_term    go to state 136
    relop_factor  go to state 50
    expr          go to state 51
    term          go to state 52
    factor        go to state 53
    var_ref       go to state 54


State 84

   75 relop_term: relop_term OP_AND . relop_factor

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    relop_factor  go to state 137
    expr          go to state 51
    term          go to state 52
    factor        go to state 53
    var_ref       go to state 54


State 85

   78 rel_op: OP_EQ .

    $default  reduce using rule 78 (rel_op)


State 86

   81 rel_op: OP_NE .

    $default  reduce using rule 81 (rel_op)


State 87

   82 rel_op: OP_GT .

    $default  reduce using rule 82 (rel_op)


State 88

   83 rel_op: OP_LT .

    $default  reduce using rule 83 (rel_op)


State 89

   79 rel_op: OP_GE .

    $default  reduce using rule 79 (rel_op)


State 90

   80 rel_op: OP_LE .

    $default  reduce using rule 80 (rel_op)


State 91

   90 add_op: OP_PLUS .

    $default  reduce using rule 90 (add_op)


State 92

   91 add_op: OP_MINUS .

    $default  reduce using rule 91 (add_op)


State 93

   77 relop_factor: expr rel_op . expr

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    expr     go to state 138
    term     go to state 52
    factor   go to state 53
    var_ref  go to state 54


State 94

   88 expr: expr add_op . term

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    term     go to state 139
    factor   go to state 53
    var_ref  go to state 54


State 95

   94 mul_op: OP_TIMES .

    $default  reduce using rule 94 (mul_op)


State 96

   95 mul_op: OP_DIVIDE .

    $default  reduce using rule 95 (mul_op)


State 97

   92 term: term mul_op . factor

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    factor   go to state 140
    var_ref  go to state 54


State 98

   46 cfactor: OP_MINUS cfactor .

    $default  reduce using rule 46 (cfactor)


State 99

   39 cexpr: cexpr . OP_PLUS mcexpr
   40      | cexpr . OP_MINUS mcexpr
   47 cfactor: MK_LPAREN cexpr . MK_RPAREN

    OP_PLUS    shift, and go to state 100
    OP_MINUS   shift, and go to state 101
    MK_RPAREN  shift, and go to state 141


State 100

   39 cexpr: cexpr OP_PLUS . mcexpr

    CONST      shift, and go to state 55
    OP_MINUS   shift, and go to state 56
    MK_LPAREN  shift, and go to state 57

    mcexpr   go to state 142
    cfactor  go to state 60


State 101

   40 cexpr: cexpr OP_MINUS . mcexpr

    CONST      shift, and go to state 55
    OP_MINUS   shift, and go to state 56
    MK_LPAREN  shift, and go to state 57

    mcexpr   go to state 143
    cfactor  go to state 60


State 102

   37 dim_decl: MK_LB cexpr MK_RB .

    $default  reduce using rule 37 (dim_decl)


State 103

   42 mcexpr: mcexpr OP_TIMES . cfactor

    CONST      shift, and go to state 55
    OP_MINUS   shift, and go to state 56
    MK_LPAREN  shift, and go to state 57

    cfactor  go to state 144


State 104

   43 mcexpr: mcexpr OP_DIVIDE . cfactor

    CONST      shift, and go to state 55
    OP_MINUS   shift, and go to state 56
    MK_LPAREN  shift, and go to state 57

    cfactor  go to state 145


State 105

    9 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 108
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 109
    WHILE         shift, and go to state 110
    FOR           shift, and go to state 111
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 112
    MK_SEMICOLON  shift, and go to state 113
    RETURN        shift, and go to state 114

    $default  reduce using rule 22 (block)

    block      go to state 146
    decl_list  go to state 116
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 117
    stmt_list  go to state 118
    stmt       go to state 119
    var_ref    go to state 120


State 106

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 147


State 107

   38 dim_decl: dim_decl MK_LB cexpr . MK_RB
   39 cexpr: cexpr . OP_PLUS mcexpr
   40      | cexpr . OP_MINUS mcexpr

    OP_PLUS   shift, and go to state 100
    OP_MINUS  shift, and go to state 101
    MK_RB     shift, and go to state 148


State 108

   32 type: ID .
   61 stmt: ID . MK_LPAREN relop_expr_list MK_RPAREN MK_SEMICOLON
  108 var_ref: ID .
  109        | ID . dim_list

    MK_LB      shift, and go to state 71
    MK_LPAREN  shift, and go to state 149

    OP_ASSIGN  reduce using rule 108 (var_ref)
    $default   reduce using rule 32 (type)

    dim_list  go to state 73


State 109

   59 stmt: IF . MK_LPAREN test MK_RPAREN stmt
   60     | IF . MK_LPAREN test MK_RPAREN stmt ELSE stmt

    MK_LPAREN  shift, and go to state 150


State 110

   56 stmt: WHILE . MK_LPAREN test MK_RPAREN stmt

    MK_LPAREN  shift, and go to state 151


State 111

   57 stmt: FOR . MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_LPAREN  shift, and go to state 152


State 112

   55 stmt: MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 108
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 109
    WHILE         shift, and go to state 110
    FOR           shift, and go to state 111
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 112
    MK_SEMICOLON  shift, and go to state 113
    RETURN        shift, and go to state 114

    $default  reduce using rule 22 (block)

    block      go to state 153
    decl_list  go to state 116
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 117
    stmt_list  go to state 118
    stmt       go to state 119
    var_ref    go to state 120


State 113

   62 stmt: MK_SEMICOLON .

    $default  reduce using rule 62 (stmt)


State 114

   63 stmt: RETURN . MK_SEMICOLON
   64     | RETURN . relop_expr MK_SEMICOLON

    ID            shift, and go to state 43
    CONST         shift, and go to state 44
    OP_NOT        shift, and go to state 45
    OP_MINUS      shift, and go to state 46
    MK_LPAREN     shift, and go to state 47
    MK_SEMICOLON  shift, and go to state 154

    relop_expr    go to state 155
    relop_term    go to state 49
    relop_factor  go to state 50
    expr          go to state 51
    term          go to state 52
    factor        go to state 53
    var_ref       go to state 54


State 115

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 156


State 116

   19 block: decl_list . stmt_list
   21      | decl_list .
   23 decl_list: decl_list . decl

    ID            shift, and go to state 108
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 109
    WHILE         shift, and go to state 110
    FOR           shift, and go to state 111
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 112
    MK_SEMICOLON  shift, and go to state 113
    RETURN        shift, and go to state 114

    $default  reduce using rule 21 (block)

    decl       go to state 21
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 117
    stmt_list  go to state 157
    stmt       go to state 119
    var_ref    go to state 120


State 117

   29 var_decl: type . init_id_list MK_SEMICOLON

    ID  shift, and go to state 64

    init_id_list  go to state 23
    init_id       go to state 24


State 118

   20 block: stmt_list .
   53 stmt_list: stmt_list . stmt

    ID            shift, and go to state 158
    IF            shift, and go to state 109
    WHILE         shift, and go to state 110
    FOR           shift, and go to state 111
    MK_LBRACE     shift, and go to state 112
    MK_SEMICOLON  shift, and go to state 113
    RETURN        shift, and go to state 114

    $default  reduce using rule 20 (block)

    stmt     go to state 159
    var_ref  go to state 120


State 119

   54 stmt_list: stmt .

    $default  reduce using rule 54 (stmt_list)


State 120

   58 stmt: var_ref . OP_ASSIGN relop_expr MK_SEMICOLON

    OP_ASSIGN  shift, and go to state 160


State 121

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 108
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 109
    WHILE         shift, and go to state 110
    FOR           shift, and go to state 111
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 112
    MK_SEMICOLON  shift, and go to state 113
    RETURN        shift, and go to state 114

    $default  reduce using rule 22 (block)

    block      go to state 161
    decl_list  go to state 116
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 117
    stmt_list  go to state 118
    stmt       go to state 119
    var_ref    go to state 120


State 122

   11 param_list: param_list MK_COMMA param .

    $default  reduce using rule 11 (param_list)


State 123

   15 dim_fn: MK_LB . expr_null MK_RB

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    $default  reduce using rule 18 (expr_null)

    expr_null  go to state 162
    expr       go to state 163
    term       go to state 52
    factor     go to state 53
    var_ref    go to state 54


State 124

   14 param: type ID dim_fn .
   16 dim_fn: dim_fn . MK_LB expr MK_RB

    MK_LB  shift, and go to state 164

    $default  reduce using rule 14 (param)


State 125

   35 id_list: id_list MK_COMMA ID dim_decl .
   38 dim_decl: dim_decl . MK_LB cexpr MK_RB

    MK_LB  shift, and go to state 63

    $default  reduce using rule 35 (id_list)


State 126

   88 expr: expr . add_op term
  111 dim_list: MK_LB expr . MK_RB

    OP_PLUS   shift, and go to state 91
    OP_MINUS  shift, and go to state 92
    MK_RB     shift, and go to state 165

    add_op  go to state 94


State 127

   73 relop_expr: relop_expr . OP_OR relop_term
   87 nonempty_relop_expr_list: relop_expr .

    OP_OR  shift, and go to state 83

    $default  reduce using rule 87 (nonempty_relop_expr_list)


State 128

  102 factor: ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 166


State 129

   84 relop_expr_list: nonempty_relop_expr_list .
   86 nonempty_relop_expr_list: nonempty_relop_expr_list . MK_COMMA relop_expr

    MK_COMMA  shift, and go to state 167

    $default  reduce using rule 84 (relop_expr_list)


State 130

  110 dim_list: dim_list MK_LB . expr MK_RB

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    expr     go to state 168
    term     go to state 52
    factor   go to state 53
    var_ref  go to state 54


State 131

  104 factor: OP_NOT ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    $default  reduce using rule 85 (relop_expr_list)

    relop_expr                go to state 127
    relop_term                go to state 49
    relop_factor              go to state 50
    relop_expr_list           go to state 169
    nonempty_relop_expr_list  go to state 129
    expr                      go to state 51
    term                      go to state 52
    factor                    go to state 53
    var_ref                   go to state 54


State 132

   73 relop_expr: relop_expr . OP_OR relop_term
   98 factor: OP_NOT MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 83
    MK_RPAREN  shift, and go to state 170


State 133

  103 factor: OP_MINUS ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    $default  reduce using rule 85 (relop_expr_list)

    relop_expr                go to state 127
    relop_term                go to state 49
    relop_factor              go to state 50
    relop_expr_list           go to state 171
    nonempty_relop_expr_list  go to state 129
    expr                      go to state 51
    term                      go to state 52
    factor                    go to state 53
    var_ref                   go to state 54


State 134

   73 relop_expr: relop_expr . OP_OR relop_term
   97 factor: OP_MINUS MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 83
    MK_RPAREN  shift, and go to state 172


State 135

   96 factor: MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 96 (factor)


State 136

   73 relop_expr: relop_expr OP_OR relop_term .
   75 relop_term: relop_term . OP_AND relop_factor

    OP_AND  shift, and go to state 84

    $default  reduce using rule 73 (relop_expr)


State 137

   75 relop_term: relop_term OP_AND relop_factor .

    $default  reduce using rule 75 (relop_term)


State 138

   77 relop_factor: expr rel_op expr .
   88 expr: expr . add_op term

    OP_PLUS   shift, and go to state 91
    OP_MINUS  shift, and go to state 92

    $default  reduce using rule 77 (relop_factor)

    add_op  go to state 94


State 139

   88 expr: expr add_op term .
   92 term: term . mul_op factor

    OP_TIMES   shift, and go to state 95
    OP_DIVIDE  shift, and go to state 96

    $default  reduce using rule 88 (expr)

    mul_op  go to state 97


State 140

   92 term: term mul_op factor .

    $default  reduce using rule 92 (term)


State 141

   47 cfactor: MK_LPAREN cexpr MK_RPAREN .

    $default  reduce using rule 47 (cfactor)


State 142

   39 cexpr: cexpr OP_PLUS mcexpr .
   42 mcexpr: mcexpr . OP_TIMES cfactor
   43       | mcexpr . OP_DIVIDE cfactor

    OP_TIMES   shift, and go to state 103
    OP_DIVIDE  shift, and go to state 104

    $default  reduce using rule 39 (cexpr)


State 143

   40 cexpr: cexpr OP_MINUS mcexpr .
   42 mcexpr: mcexpr . OP_TIMES cfactor
   43       | mcexpr . OP_DIVIDE cfactor

    OP_TIMES   shift, and go to state 103
    OP_DIVIDE  shift, and go to state 104

    $default  reduce using rule 40 (cexpr)


State 144

   42 mcexpr: mcexpr OP_TIMES cfactor .

    $default  reduce using rule 42 (mcexpr)


State 145

   43 mcexpr: mcexpr OP_DIVIDE cfactor .

    $default  reduce using rule 43 (mcexpr)


State 146

    9 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 173


State 147

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 108
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 109
    WHILE         shift, and go to state 110
    FOR           shift, and go to state 111
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 112
    MK_SEMICOLON  shift, and go to state 113
    RETURN        shift, and go to state 114

    $default  reduce using rule 22 (block)

    block      go to state 174
    decl_list  go to state 116
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 117
    stmt_list  go to state 118
    stmt       go to state 119
    var_ref    go to state 120


State 148

   38 dim_decl: dim_decl MK_LB cexpr MK_RB .

    $default  reduce using rule 38 (dim_decl)


State 149

   61 stmt: ID MK_LPAREN . relop_expr_list MK_RPAREN MK_SEMICOLON

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    $default  reduce using rule 85 (relop_expr_list)

    relop_expr                go to state 127
    relop_term                go to state 49
    relop_factor              go to state 50
    relop_expr_list           go to state 175
    nonempty_relop_expr_list  go to state 129
    expr                      go to state 51
    term                      go to state 52
    factor                    go to state 53
    var_ref                   go to state 54


State 150

   59 stmt: IF MK_LPAREN . test MK_RPAREN stmt
   60     | IF MK_LPAREN . test MK_RPAREN stmt ELSE stmt

    ID         shift, and go to state 176
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    test          go to state 177
    assign_expr   go to state 178
    relop_expr    go to state 179
    relop_term    go to state 49
    relop_factor  go to state 50
    expr          go to state 51
    term          go to state 52
    factor        go to state 53
    var_ref       go to state 54


State 151

   56 stmt: WHILE MK_LPAREN . test MK_RPAREN stmt

    ID         shift, and go to state 176
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    test          go to state 180
    assign_expr   go to state 178
    relop_expr    go to state 179
    relop_term    go to state 49
    relop_factor  go to state 50
    expr          go to state 51
    term          go to state 52
    factor        go to state 53
    var_ref       go to state 54


State 152

   57 stmt: FOR MK_LPAREN . assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 176
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    $default  reduce using rule 66 (assign_expr_list)

    assign_expr_list           go to state 181
    nonempty_assign_expr_list  go to state 182
    assign_expr                go to state 183
    relop_expr                 go to state 179
    relop_term                 go to state 49
    relop_factor               go to state 50
    expr                       go to state 51
    term                       go to state 52
    factor                     go to state 53
    var_ref                    go to state 54


State 153

   55 stmt: MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 184


State 154

   63 stmt: RETURN MK_SEMICOLON .

    $default  reduce using rule 63 (stmt)


State 155

   64 stmt: RETURN relop_expr . MK_SEMICOLON
   73 relop_expr: relop_expr . OP_OR relop_term

    OP_OR         shift, and go to state 83
    MK_SEMICOLON  shift, and go to state 185


State 156

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 10 (function_decl)


State 157

   19 block: decl_list stmt_list .
   53 stmt_list: stmt_list . stmt

    ID            shift, and go to state 158
    IF            shift, and go to state 109
    WHILE         shift, and go to state 110
    FOR           shift, and go to state 111
    MK_LBRACE     shift, and go to state 112
    MK_SEMICOLON  shift, and go to state 113
    RETURN        shift, and go to state 114

    $default  reduce using rule 19 (block)

    stmt     go to state 159
    var_ref  go to state 120


State 158

   61 stmt: ID . MK_LPAREN relop_expr_list MK_RPAREN MK_SEMICOLON
  108 var_ref: ID .
  109        | ID . dim_list

    MK_LB      shift, and go to state 71
    MK_LPAREN  shift, and go to state 149

    $default  reduce using rule 108 (var_ref)

    dim_list  go to state 73


State 159

   53 stmt_list: stmt_list stmt .

    $default  reduce using rule 53 (stmt_list)


State 160

   58 stmt: var_ref OP_ASSIGN . relop_expr MK_SEMICOLON

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    relop_expr    go to state 186
    relop_term    go to state 49
    relop_factor  go to state 50
    expr          go to state 51
    term          go to state 52
    factor        go to state 53
    var_ref       go to state 54


State 161

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 187


State 162

   15 dim_fn: MK_LB expr_null . MK_RB

    MK_RB  shift, and go to state 188


State 163

   17 expr_null: expr .
   88 expr: expr . add_op term

    OP_PLUS   shift, and go to state 91
    OP_MINUS  shift, and go to state 92

    $default  reduce using rule 17 (expr_null)

    add_op  go to state 94


State 164

   16 dim_fn: dim_fn MK_LB . expr MK_RB

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    expr     go to state 189
    term     go to state 52
    factor   go to state 53
    var_ref  go to state 54


State 165

  111 dim_list: MK_LB expr MK_RB .

    $default  reduce using rule 111 (dim_list)


State 166

  102 factor: ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 102 (factor)


State 167

   86 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA . relop_expr

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    relop_expr    go to state 190
    relop_term    go to state 49
    relop_factor  go to state 50
    expr          go to state 51
    term          go to state 52
    factor        go to state 53
    var_ref       go to state 54


State 168

   88 expr: expr . add_op term
  110 dim_list: dim_list MK_LB expr . MK_RB

    OP_PLUS   shift, and go to state 91
    OP_MINUS  shift, and go to state 92
    MK_RB     shift, and go to state 191

    add_op  go to state 94


State 169

  104 factor: OP_NOT ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 192


State 170

   98 factor: OP_NOT MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 98 (factor)


State 171

  103 factor: OP_MINUS ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 193


State 172

   97 factor: OP_MINUS MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 97 (factor)


State 173

    9 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 9 (function_decl)


State 174

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 194


State 175

   61 stmt: ID MK_LPAREN relop_expr_list . MK_RPAREN MK_SEMICOLON

    MK_RPAREN  shift, and go to state 195


State 176

   70 assign_expr: ID . OP_ASSIGN relop_expr
  102 factor: ID . MK_LPAREN relop_expr_list MK_RPAREN
  108 var_ref: ID .
  109        | ID . dim_list

    OP_ASSIGN  shift, and go to state 196
    MK_LB      shift, and go to state 71
    MK_LPAREN  shift, and go to state 72

    $default  reduce using rule 108 (var_ref)

    dim_list  go to state 73


State 177

   59 stmt: IF MK_LPAREN test . MK_RPAREN stmt
   60     | IF MK_LPAREN test . MK_RPAREN stmt ELSE stmt

    MK_RPAREN  shift, and go to state 197


State 178

   69 test: assign_expr .

    $default  reduce using rule 69 (test)


State 179

   71 assign_expr: relop_expr .
   73 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 83

    $default  reduce using rule 71 (assign_expr)


State 180

   56 stmt: WHILE MK_LPAREN test . MK_RPAREN stmt

    MK_RPAREN  shift, and go to state 198


State 181

   57 stmt: FOR MK_LPAREN assign_expr_list . MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_SEMICOLON  shift, and go to state 199


State 182

   65 assign_expr_list: nonempty_assign_expr_list .
   67 nonempty_assign_expr_list: nonempty_assign_expr_list . MK_COMMA assign_expr

    MK_COMMA  shift, and go to state 200

    $default  reduce using rule 65 (assign_expr_list)


State 183

   68 nonempty_assign_expr_list: assign_expr .

    $default  reduce using rule 68 (nonempty_assign_expr_list)


State 184

   55 stmt: MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 55 (stmt)


State 185

   64 stmt: RETURN relop_expr MK_SEMICOLON .

    $default  reduce using rule 64 (stmt)


State 186

   58 stmt: var_ref OP_ASSIGN relop_expr . MK_SEMICOLON
   73 relop_expr: relop_expr . OP_OR relop_term

    OP_OR         shift, and go to state 83
    MK_SEMICOLON  shift, and go to state 201


State 187

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 8 (function_decl)


State 188

   15 dim_fn: MK_LB expr_null MK_RB .

    $default  reduce using rule 15 (dim_fn)


State 189

   16 dim_fn: dim_fn MK_LB expr . MK_RB
   88 expr: expr . add_op term

    OP_PLUS   shift, and go to state 91
    OP_MINUS  shift, and go to state 92
    MK_RB     shift, and go to state 202

    add_op  go to state 94


State 190

   73 relop_expr: relop_expr . OP_OR relop_term
   86 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA relop_expr .

    OP_OR  shift, and go to state 83

    $default  reduce using rule 86 (nonempty_relop_expr_list)


State 191

  110 dim_list: dim_list MK_LB expr MK_RB .

    $default  reduce using rule 110 (dim_list)


State 192

  104 factor: OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 104 (factor)


State 193

  103 factor: OP_MINUS ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 103 (factor)


State 194

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 7 (function_decl)


State 195

   61 stmt: ID MK_LPAREN relop_expr_list MK_RPAREN . MK_SEMICOLON

    MK_SEMICOLON  shift, and go to state 203


State 196

   70 assign_expr: ID OP_ASSIGN . relop_expr

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    relop_expr    go to state 204
    relop_term    go to state 49
    relop_factor  go to state 50
    expr          go to state 51
    term          go to state 52
    factor        go to state 53
    var_ref       go to state 54


State 197

   59 stmt: IF MK_LPAREN test MK_RPAREN . stmt
   60     | IF MK_LPAREN test MK_RPAREN . stmt ELSE stmt

    ID            shift, and go to state 158
    IF            shift, and go to state 109
    WHILE         shift, and go to state 110
    FOR           shift, and go to state 111
    MK_LBRACE     shift, and go to state 112
    MK_SEMICOLON  shift, and go to state 113
    RETURN        shift, and go to state 114

    stmt     go to state 205
    var_ref  go to state 120


State 198

   56 stmt: WHILE MK_LPAREN test MK_RPAREN . stmt

    ID            shift, and go to state 158
    IF            shift, and go to state 109
    WHILE         shift, and go to state 110
    FOR           shift, and go to state 111
    MK_LBRACE     shift, and go to state 112
    MK_SEMICOLON  shift, and go to state 113
    RETURN        shift, and go to state 114

    stmt     go to state 206
    var_ref  go to state 120


State 199

   57 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON . relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    $default  reduce using rule 85 (relop_expr_list)

    relop_expr                go to state 127
    relop_term                go to state 49
    relop_factor              go to state 50
    relop_expr_list           go to state 207
    nonempty_relop_expr_list  go to state 129
    expr                      go to state 51
    term                      go to state 52
    factor                    go to state 53
    var_ref                   go to state 54


State 200

   67 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA . assign_expr

    ID         shift, and go to state 176
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    assign_expr   go to state 208
    relop_expr    go to state 179
    relop_term    go to state 49
    relop_factor  go to state 50
    expr          go to state 51
    term          go to state 52
    factor        go to state 53
    var_ref       go to state 54


State 201

   58 stmt: var_ref OP_ASSIGN relop_expr MK_SEMICOLON .

    $default  reduce using rule 58 (stmt)


State 202

   16 dim_fn: dim_fn MK_LB expr MK_RB .

    $default  reduce using rule 16 (dim_fn)


State 203

   61 stmt: ID MK_LPAREN relop_expr_list MK_RPAREN MK_SEMICOLON .

    $default  reduce using rule 61 (stmt)


State 204

   70 assign_expr: ID OP_ASSIGN relop_expr .
   73 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 83

    $default  reduce using rule 70 (assign_expr)


State 205

   59 stmt: IF MK_LPAREN test MK_RPAREN stmt .
   60     | IF MK_LPAREN test MK_RPAREN stmt . ELSE stmt

    ELSE  shift, and go to state 209

    ELSE      [reduce using rule 59 (stmt)]
    $default  reduce using rule 59 (stmt)


State 206

   56 stmt: WHILE MK_LPAREN test MK_RPAREN stmt .

    $default  reduce using rule 56 (stmt)


State 207

   57 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list . MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_SEMICOLON  shift, and go to state 210


State 208

   67 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA assign_expr .

    $default  reduce using rule 67 (nonempty_assign_expr_list)


State 209

   60 stmt: IF MK_LPAREN test MK_RPAREN stmt ELSE . stmt

    ID            shift, and go to state 158
    IF            shift, and go to state 109
    WHILE         shift, and go to state 110
    FOR           shift, and go to state 111
    MK_LBRACE     shift, and go to state 112
    MK_SEMICOLON  shift, and go to state 113
    RETURN        shift, and go to state 114

    stmt     go to state 211
    var_ref  go to state 120


State 210

   57 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON . assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 176
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_MINUS   shift, and go to state 46
    MK_LPAREN  shift, and go to state 47

    $default  reduce using rule 66 (assign_expr_list)

    assign_expr_list           go to state 212
    nonempty_assign_expr_list  go to state 182
    assign_expr                go to state 183
    relop_expr                 go to state 179
    relop_term                 go to state 49
    relop_factor               go to state 50
    expr                       go to state 51
    term                       go to state 52
    factor                     go to state 53
    var_ref                    go to state 54


State 211

   60 stmt: IF MK_LPAREN test MK_RPAREN stmt ELSE stmt .

    $default  reduce using rule 60 (stmt)


State 212

   57 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list . MK_RPAREN stmt

    MK_RPAREN  shift, and go to state 213


State 213

   57 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN . stmt

    ID            shift, and go to state 158
    IF            shift, and go to state 109
    WHILE         shift, and go to state 110
    FOR           shift, and go to state 111
    MK_LBRACE     shift, and go to state 112
    MK_SEMICOLON  shift, and go to state 113
    RETURN        shift, and go to state 114

    stmt     go to state 214
    var_ref  go to state 120


State 214

   57 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt .

    $default  reduce using rule 57 (stmt)
